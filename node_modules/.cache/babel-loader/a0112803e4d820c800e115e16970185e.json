{"ast":null,"code":"var _jsxFileName = \"/Users/priya/Desktop/Django/React/equakes/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Gmaps, Marker, InfoWindow, Circle } from \"react-gmaps\";\nconst coords = {\n  lat: 51.5258541,\n  lng: -0.08040660000006028\n};\nconst params = {\n  v: \"3.exp\",\n  key: \"AIzaSyBgrLgIKh5eh3TBIKuDVif9vnOjIANbstQ\"\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 0,\n      long: 0,\n      params: null\n    };\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n    });\n    fetch(\"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2014-01-01&endtime=2014-01-02\").then(function (response) {\n      console.log(response);\n      this.setState({\n        params: response.json()\n      });\n    });\n  }\n\n  onMapCreated(map) {\n    map.setOptions({\n      disableDefaultUI: true\n    });\n  }\n\n  onDragEnd(e) {\n    console.log(\"onDragEnd\", e);\n  }\n\n  onCloseClick() {\n    console.log(\"onCloseClick\");\n  }\n\n  onClick(e) {\n    console.log(\"onClick\", e);\n  }\n\n  render() {\n    return React.createElement(Gmaps, {\n      width: \"800px\",\n      height: \"600px\",\n      lat: this.state.lat,\n      lng: this.state.long,\n      zoom: 12,\n      loadingMessage: \"Be happy\",\n      params: this.state.params,\n      onMapCreated: this.onMapCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      lat: coords.lat,\n      lng: coords.lng,\n      draggable: true,\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      lat: coords.lat,\n      lng: coords.lng,\n      content: \"Hello, React :)\",\n      onCloseClick: this.onCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      lat: coords.lat,\n      lng: coords.lng,\n      radius: 500,\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n} // ReactDOM.render(<App />, document.getElementById(\"gmaps\"));\n\n\nexport default App;","map":{"version":3,"sources":["/Users/priya/Desktop/Django/React/equakes/src/App.js"],"names":["React","ReactDOM","Gmaps","Marker","InfoWindow","Circle","coords","lat","lng","params","v","key","App","Component","constructor","state","long","navigator","geolocation","getCurrentPosition","position","setState","latitude","longitude","fetch","then","response","console","log","json","onMapCreated","map","setOptions","disableDefaultUI","onDragEnd","e","onCloseClick","onClick","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Gmaps, Marker, InfoWindow, Circle } from \"react-gmaps\";\n\nconst coords = {\n  lat: 51.5258541,\n  lng: -0.08040660000006028\n};\n\nconst params = { v: \"3.exp\", key: \"AIzaSyBgrLgIKh5eh3TBIKuDVif9vnOjIANbstQ\" };\n\nclass App extends React.Component {\n  state = { lat: 0, long: 0, params: null };\n  constructor() {\n    super();\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n    });\n\n    fetch(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2014-01-01&endtime=2014-01-02\"\n    ).then(function(response) {\n      console.log(response);\n      this.setState({ params: response.json() });\n    });\n  }\n\n  onMapCreated(map) {\n    map.setOptions({\n      disableDefaultUI: true\n    });\n  }\n\n  onDragEnd(e) {\n    console.log(\"onDragEnd\", e);\n  }\n\n  onCloseClick() {\n    console.log(\"onCloseClick\");\n  }\n\n  onClick(e) {\n    console.log(\"onClick\", e);\n  }\n\n  render() {\n    return (\n      <Gmaps\n        width={\"800px\"}\n        height={\"600px\"}\n        lat={this.state.lat}\n        lng={this.state.long}\n        zoom={12}\n        loadingMessage={\"Be happy\"}\n        params={this.state.params}\n        onMapCreated={this.onMapCreated}\n      >\n        <Marker\n          lat={coords.lat}\n          lng={coords.lng}\n          draggable={true}\n          onDragEnd={this.onDragEnd}\n        />\n        <InfoWindow\n          lat={coords.lat}\n          lng={coords.lng}\n          content={\"Hello, React :)\"}\n          onCloseClick={this.onCloseClick}\n        />\n        <Circle\n          lat={coords.lat}\n          lng={coords.lng}\n          radius={500}\n          onClick={this.onClick}\n        />\n      </Gmaps>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById(\"gmaps\"));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
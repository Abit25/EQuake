{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _eventsMap = require('../events/map');\n\nvar _eventsMap2 = _interopRequireDefault(_eventsMap);\n\nvar _mixinsListener = require('../mixins/listener');\n\nvar _mixinsListener2 = _interopRequireDefault(_mixinsListener);\n\nvar _utilsGoogleMaps = require('../utils/google-maps');\n\nvar _utilsGoogleMaps2 = _interopRequireDefault(_utilsGoogleMaps);\n\nvar _utilsCompareProps = require('../utils/compare-props');\n\nvar _utilsCompareProps2 = _interopRequireDefault(_utilsCompareProps);\n\nvar Gmaps = (0, _createReactClass2['default'])({\n  mixins: [_mixinsListener2['default']],\n  map: null,\n  getInitialState: function getInitialState() {\n    return {\n      isMapCreated: false\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.setState({\n      callbackIndex: _utilsGoogleMaps2['default'].load(this.props.params, this.mapsCallback)\n    });\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    _utilsGoogleMaps2['default'].removeCallback(this.state.callbackIndex);\n\n    this.removeListeners();\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this.map && !(0, _utilsCompareProps2['default'])(this.props, nextProps)) {\n      this.map.setOptions(_extends({}, nextProps, {\n        center: new google.maps.LatLng(nextProps.lat, nextProps.lng)\n      }));\n    }\n  },\n  getMap: function getMap() {\n    return this.map;\n  },\n  mapsCallback: function mapsCallback() {\n    this.createMap();\n    this.addListeners(this.map, _eventsMap2['default']);\n  },\n  createMap: function createMap() {\n    var node = _reactDom2['default'].findDOMNode(this);\n\n    this.map = new google.maps.Map(node, _extends({}, this.props, {\n      center: new google.maps.LatLng(this.props.lat, this.props.lng)\n    }));\n    this.setState({\n      isMapCreated: true\n    });\n\n    if (this.props.onMapCreated) {\n      this.props.onMapCreated(this.map);\n    }\n  },\n  getChildren: function getChildren() {\n    var _this = this;\n\n    return _react2['default'].Children.map(this.props.children, function (child) {\n      if (!_react2['default'].isValidElement(child)) {\n        return child;\n      }\n\n      return _react2['default'].cloneElement(child, {\n        ref: child.ref,\n        map: _this.map\n      });\n    });\n  },\n  render: function render() {\n    var style = (0, _objectAssign2['default'])({\n      width: this.props.width,\n      height: this.props.height\n    }, this.props.style);\n    return _react2['default'].createElement('div', {\n      style: style,\n      className: this.props.className\n    }, this.props.loadingMessage || 'Loading...', this.state.isMapCreated ? this.getChildren() : null);\n  }\n});\nexports['default'] = Gmaps;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}